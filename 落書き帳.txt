
・CommonLispのformat関数での基本的なdirectiveを生成するツールです。
・マニアックなものは対応していません。悪しからず。
・面倒くさいのでいちいち厳密なバリデーションチェックしません。
  私自身、仕様を100%理解していないので、実際に実行して期待通りいくか試してね。
・「~r（任意の基数）」を使うことはまずないと思うので未対応です。


【出力したいもの】
いい感じに変換するやつ(Aesthetic)
string int float list
改行 改ページ チルダ

【結果】
~4d

【コピー】

===================================================================

【チルダ】
~n~

n 繰り返し回数（0以上の整数）

: なし
@ なし
:@ なし

http://www.lispworks.com/documentation/HyperSpec/Body/22_cae.htm

-------------

【文字】
~c

(format nil "~c" #\a) ; "a"
(format nil "~:c" #\Rubout) ; "Rubout"
(format nil "~:@c" #\A) ; "A"

: 印字不可な文字は名称で出力する
@ プレフィックスに#\をつける
:@ 印字不可な文字を名称で出力し、Shiftキーについて言及する

http://www.lispworks.com/documentation/HyperSpec/Body/22_caa.htm

-------------

【改行】
~n%

n 繰り返し回数（0以上の整数）

: なし
@ なし
:@ なし

http://www.lispworks.com/documentation/HyperSpec/Body/22_cab.htm

-------------

【行の先頭でなければ改行】
~n&

n 繰り返し回数（0以上の整数）

(format nil "~2&a~2&a")

: なし
@ なし
:@ なし

http://www.lispworks.com/documentation/HyperSpec/Body/22_cac.htm

-------------

【改ページ】
~n|

n 繰り返し回数（0以上の整数）

: なし
@ なし
:@ なし

http://www.lispworks.com/documentation/HyperSpec/Body/22_cad.htm

-------------

/*
【基数】（没）
~ radix,mincol,padchar,commachar,comma-interval r

radix 基数（2以上の整数）（省略した場合、引数が英語で出力される）
mincol 最小文字数（0以上の整数）
padchar パディングに利用する文字

(format nil "~r" 4) ; "four"
(format nil "~10r" 4) ; "4"
(format nil "~2r" 4) ; "100"

(format nil "~10,3r" 4) ; "  4"
(format nil "~,6r" 4) ; "four"

(format nil "~10,3,'0r" 4) ; "004"
(format nil "~10,3,'ar" 4) ; "aa4"
(format nil "~10,3,'\\r" 4) ; "\\\\4"
(format nil "~10,3,'\"r" 4) ; "\"\"4"
(format nil "~10,3,'あr" 4) ; "ああ4"

http://www.lispworks.com/documentation/HyperSpec/Body/22_cba.htm
*/

-------------

【整数（10進数）】
~ mincol,padchar,commachar,comma-interval d

mincol 最小文字数（カンマ込み）
padchar パディングに利用すう文字
commachar カンマに利用すう文字
comma-interval カンマの間隔

: カンマ区切りする
@ 正数のときに+の符号を出力する
:@ カンマ区切りし、正数のときに+の符号を出力する

(format nil "~6,'0,' ,2:d" 1234) ; "012 34"

http://www.lispworks.com/documentation/HyperSpec/Body/22_cbb.htm

-------------

【整数（2進数）】
~ mincol,padchar,commachar,comma-interval b

mincol 最小文字数（カンマ込み）
padchar パディングに利用すう文字
commachar カンマに利用すう文字
comma-interval カンマの間隔

: カンマ区切りする
@ 正数のときに+の符号を出力する
:@ カンマ区切りし、正数のときに+の符号を出力する

http://www.lispworks.com/documentation/HyperSpec/Body/22_cbc.htm

-------------

【整数（8進数）】
~ mincol,padchar,commachar,comma-interval o

mincol 最小文字数（カンマ込み）
padchar パディングに利用すう文字
commachar カンマに利用すう文字
comma-interval カンマの間隔

: カンマ区切りする
@ 正数のときに+の符号を出力する
:@ カンマ区切りし、正数のときに+の符号を出力する

http://www.lispworks.com/documentation/HyperSpec/Body/22_cbd.htm

-------------

【整数（16進数）】
~ mincol,padchar,commachar,comma-interval x

mincol 最小文字数（カンマ込み）
padchar パディングに利用すう文字
commachar カンマに利用すう文字
comma-interval カンマの間隔

: カンマ区切りする
@ 正数のときに+の符号を出力する
:@ カンマ区切りし、正数のときに+の符号を出力する

http://www.lispworks.com/documentation/HyperSpec/Body/22_cbe.htm

-------------

【浮動小数点数（固定小数点表記）】
~ w,d,k,overflowchar,padchar f

w 文字数（小数点込み）
d 小数点以下の桁数
k
overflowchar wの文字数に収まらなかったときに代替で出力する文字
padchar パディングに利用すう文字

@ 正数のときに+の符号を出力する

(format nil "~7,2f" 123.456) ; " 123.46"
(format nil "~3,2,,'xf" 123.456) ; "xxx"

http://www.lispworks.com/documentation/HyperSpec/Body/22_cca.htm

-------------

【浮動小数点数（指数表記）】

@ 正数のときに+の符号を出力する

-------------

【浮動小数点数（表記方法は自動選択）】

@ 正数のときに+の符号を出力する

-------------
-------------
-------------
-------------
-------------

(format nil "~f ~e ~ghoge" 1234.56789 1234.56789 1234.56789)
(format nil "~f" 999999999999.0)



