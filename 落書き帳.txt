
・CommonLispのformat関数での基本的なdirectiveを生成するツールです。
・面倒くさいのでいちいち厳密なバリデーションチェックはしません。（数値の範囲とか）
・期待通りに実行されるかは君の目で確かめてくれ！

・対応しているもの
（略）

・対応していないもの
【~|（改ページ）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cad.htm
【~r（任意の基数）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cba.htm
【~$（通貨）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_ccd.htm
【~w（プリンター制御変数に従う）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cdc.htm
【~_（条件付き改行）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cea.htm
【~<~>（論理ブロック & 正当化）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_ceb.htm
http://www.lispworks.com/documentation/HyperSpec/Body/22_cfb.htm
【~i（インデント）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cec.htm
【~/name/（関数呼び出し）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_ced.htm
【~t（カーソル移動）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cfa.htm
【~*（GoTo）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cga.htm
【~[~]（条件式）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cgb.htm
【~{~}（反復）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cgd.htm
【~?（再起処理）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cgf.htm
【~(~)（大文字小文字変換）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cha.htm
【~p（複数形）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_chc.htm
【~;（句セパレータ）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cia.htm
【~^（処理を抜ける）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cib.htm
【~（改行無視）】
http://www.lispworks.com/documentation/HyperSpec/Body/22_cic.htm

===================================================================

【チルダ】
~n~

n 繰り返し回数（0以上の整数）

http://www.lispworks.com/documentation/HyperSpec/Body/22_cae.htm

-------------

【文字】
~c

(format nil "~c" #\a) ; "a"
(format nil "~:c" #\Rubout) ; "Rubout"
(format nil "~:@c" #\A) ; "A"

: 印字不可な文字は名称で出力する
@ プレフィックスに#\をつける
:@ 印字不可な文字を名称で出力し、Shiftキーについて言及する

http://www.lispworks.com/documentation/HyperSpec/Body/22_caa.htm

-------------

【改行】
~n%

n 繰り返し回数（0以上の整数）

http://www.lispworks.com/documentation/HyperSpec/Body/22_cab.htm

-------------

【行の先頭でなければ改行】
~n&

n 繰り返し回数（0以上の整数）

(format nil "~2&a~2&a")

http://www.lispworks.com/documentation/HyperSpec/Body/22_cac.htm

-------------

/*
【基数】（没）
~ radix,mincol,padchar,commachar,comma-interval r

radix 基数（2以上の整数）（省略した場合、引数が英語で出力される）
mincol 最小文字数（0以上の整数）
padchar パディングに利用する文字

(format nil "~r" 4) ; "four"
(format nil "~10r" 4) ; "4"
(format nil "~2r" 4) ; "100"

(format nil "~10,3r" 4) ; "  4"
(format nil "~,6r" 4) ; "four"

(format nil "~10,3,'0r" 4) ; "004"
(format nil "~10,3,'ar" 4) ; "aa4"
(format nil "~10,3,'\\r" 4) ; "\\\\4"
(format nil "~10,3,'\"r" 4) ; "\"\"4"
(format nil "~10,3,'あr" 4) ; "ああ4"

http://www.lispworks.com/documentation/HyperSpec/Body/22_cba.htm
*/

-------------

【整数（10進数）】
~ mincol,padchar,commachar,comma-interval d

mincol 最小文字数
padchar パディングに利用する文字
commachar カンマに利用する文字
comma-interval カンマの間隔

: カンマ区切りする
@ 正数のときに+の符号を出力する
:@ カンマ区切りし、正数のときに+の符号を出力する

(format nil "~6,'0,' ,2:d" 1234) ; "012 34"

http://www.lispworks.com/documentation/HyperSpec/Body/22_cbb.htm

-------------

【整数（2進数）】
~ mincol,padchar,commachar,comma-interval b

mincol 最小文字数
padchar パディングに利用する文字
commachar カンマに利用する文字
comma-interval カンマの間隔

: カンマ区切りする
@ 正数のときに+の符号を出力する
:@ カンマ区切りし、正数のときに+の符号を出力する

http://www.lispworks.com/documentation/HyperSpec/Body/22_cbc.htm

-------------

【整数（8進数）】
~ mincol,padchar,commachar,comma-interval o

mincol 最小文字数
padchar パディングに利用する文字
commachar カンマに利用する文字
comma-interval カンマの間隔

: カンマ区切りする
@ 正数のときに+の符号を出力する
:@ カンマ区切りし、正数のときに+の符号を出力する

http://www.lispworks.com/documentation/HyperSpec/Body/22_cbd.htm

-------------

【整数（16進数）】
~ mincol,padchar,commachar,comma-interval x

mincol 最小文字数
padchar パディングに利用する文字
commachar カンマに利用する文字
comma-interval カンマの間隔

: カンマ区切りする
@ 正数のときに+の符号を出力する
:@ カンマ区切りし、正数のときに+の符号を出力する

http://www.lispworks.com/documentation/HyperSpec/Body/22_cbe.htm

-------------

【浮動小数点数（固定小数点表記）】
~ w,d,k,overflowchar,padchar f

w 文字数
d 小数点以下の桁数
k 引数を10^k倍にする
overflowchar wの文字数を超えたときに出力する文字
padchar パディングに利用する文字

@ 正数のときに+の符号を出力する

(format nil "~7,2f" 123.456) ; " 123.46"
(format nil "~7,2,1f" 123.456) ; "1234.56"
(format nil "~3,2,,'xf" 123.456) ; "xxx"

http://www.lispworks.com/documentation/HyperSpec/Body/22_cca.htm

-------------

【浮動小数点数（指数表記）】
~ w,d,e,k,overflowchar,padchar,exponentchar e

w 文字数
d 仮数の小数点以下の桁数
e 指数部の桁数
k 仮数の整数部の桁数
overflowchar wの文字数を超えたときに出力する文字
padchar パディングに利用する文字
exponentchar 仮数部と指数部の間の文字

@ 正数のときに+の符号を出力する

(format nil "~e" 12.34) ; "1.234e+1"
(format nil "~,1e" 12.34) ; "1.2e+1"
(format nil "~9e" 12.34) ; " 1.234e+1"
(format nil "~,,,2e" 12.34) ; "12.34e+0"
(format nil "~,,5e" 12.34) ; "1.234e+00001"
(format nil "~,,,,,,'He" 12.34) ; "1.234H+1"

http://www.lispworks.com/documentation/HyperSpec/Body/22_ccb.htm

-------------

【浮動小数点数（表記方法は自動選択）】
~ w,d,e,k,overflowchar,padchar,exponentchar g

w 文字数
d 仮数の小数点以下の桁数
e 指数部の桁数
k 仮数の整数部の桁数
overflowchar wの文字数を超えたときに出力する文字
padchar パディングに利用する文字
exponentchar 仮数部と指数部の間の文字

@ 正数のときに+の符号を出力する

http://www.lispworks.com/documentation/HyperSpec/Body/22_ccc.htm

-------------

【美的】
~ mincol,colinc,minpad,padchar a

mincol 最小文字数（0以上の整数）
colinc 1回のパディングでpadcharを利用する回数
minpad パディングの最小回数
padchar パディングに利用する文字

: nilを()と出力する
@ 右寄せで出力する
:@ 右寄せで出力し、かつnilは()と出力する

(format nil "~5a" 100) ; "100  "
(format nil "~5,,,'xa" 100) ; "100xx"
(format nil "~5,,,'x@a" 100) ; "xx100"
(format nil "~5,,1,'xa" 100) ; "100xx"
(format nil "~,,1,'xa" 100) ; "100x"
(format nil "~5,3,0,'xa" 100) ; "100xxx"
(format nil "~5,3,1,'xa" 100) ; "100xxxx"

http://www.lispworks.com/documentation/HyperSpec/Body/22_cda.htm

-------------

【標準】
~ mincol,colinc,minpad,padchar s

mincol 最小文字数（0以上の整数）
colinc 1回のパディングでpadcharを利用する回数
minpad パディングの最小回数
padchar パディングに利用する文字

: nilを()と出力する
@ 右寄せで出力する
:@ 右寄せで出力し、かつnilは()と出力する

http://www.lispworks.com/documentation/HyperSpec/Body/22_cdb.htm

===================================================================

